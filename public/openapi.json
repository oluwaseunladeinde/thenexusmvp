{
  "openapi": "3.0.0",
  "info": {
    "title": "The Nexus API",
    "version": "1.0.0",
    "description": "API documentation for The Nexus platform, standardized with v1 routes."
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/v1",
      "description": "Development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "ApiSuccess": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "ApiError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "ProfessionalUpdateData": {
        "type": "object",
        "properties": {
          "preferredName": {
            "type": "string"
          },
          "profileHeadline": {
            "type": "string"
          },
          "profileSummary": {
            "type": "string"
          },
          "currentTitle": {
            "type": "string"
          },
          "currentCompany": {
            "type": "string"
          },
          "currentIndustry": {
            "type": "string"
          },
          "locationCity": {
            "type": "string"
          },
          "locationState": {
            "type": "string"
          },
          "willingToRelocate": {
            "type": "boolean"
          },
          "salaryExpectationMin": {
            "type": "number"
          },
          "salaryExpectationMax": {
            "type": "number"
          },
          "noticePeriodDays": {
            "type": "number"
          },
          "openToOpportunities": {
            "type": "boolean"
          },
          "confidentialSearch": {
            "type": "boolean"
          },
          "linkedinUrl": {
            "type": "string"
          },
          "portfolioUrl": {
            "type": "string"
          }
        }
      },
      "HrPartnerCreateData": {
        "type": "object",
        "properties": {
          "jobTitle": {
            "type": "string"
          },
          "department": {
            "type": "string"
          },
          "linkedinUrl": {
            "type": "string"
          },
          "companyName": {
            "type": "string"
          },
          "industry": {
            "type": "string"
          },
          "companySize": {
            "type": "string"
          },
          "headquartersLocation": {
            "type": "string"
          },
          "companyWebsite": {
            "type": "string"
          },
          "companyDescription": {
            "type": "string"
          }
        }
      },
      "IntroductionRequestData": {
        "type": "object",
        "properties": {
          "professionalId": {
            "type": "string"
          },
          "jobRoleId": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "urgency": {
            "type": "string",
            "enum": [
              "low",
              "normal",
              "high"
            ]
          }
        }
      }
    }
  },
  "paths": {
    "/api/v1/admin/auth/login": {
      "post": {
        "summary": "Admin login verification",
        "tags": [
          "Admin Auth"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "401": {
            "description": "Invalid credentials"
          },
          "403": {
            "description": "Admin access denied"
          }
        }
      }
    },
    "/api/v1/admin/auth/me": {
      "get": {
        "summary": "Get current admin user",
        "tags": [
          "Admin Auth"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Current admin user data"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Admin access required"
          }
        }
      }
    },
    "/api/v1/admin/content/{id}": {
      "patch": {
        "summary": "Moderate content item",
        "tags": [
          "Admin Content"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": [
                      "approve",
                      "reject",
                      "remove"
                    ]
                  },
                  "notes": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Content moderated successfully"
          },
          "404": {
            "description": "Content item not found"
          }
        }
      }
    },
    "/api/v1/admin/content/moderation": {
      "get": {
        "summary": "Get moderation queue",
        "tags": [
          "Admin Content"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "reviewed",
                "approved",
                "removed"
              ]
            }
          },
          {
            "in": "query",
            "name": "severity",
            "schema": {
              "type": "string",
              "enum": [
                "low",
                "medium",
                "high",
                "critical"
              ]
            }
          },
          {
            "in": "query",
            "name": "entityType",
            "schema": {
              "type": "string",
              "enum": [
                "profile",
                "job",
                "message"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Moderation queue retrieved successfully"
          }
        }
      }
    },
    "/api/v1/admin/content/stats": {
      "get": {
        "summary": "Get content moderation statistics",
        "tags": [
          "Admin Content"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Content statistics retrieved successfully"
          }
        }
      }
    },
    "/api/v1/admin/performance": {
      "get": {
        "summary": "Get system performance metrics",
        "tags": [
          "Admin Performance"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "endpoint",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "timeframe",
            "schema": {
              "type": "string",
              "enum": [
                "15m",
                "1h",
                "24h"
              ],
              "default": "1h"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Performance metrics retrieved successfully"
          }
        }
      }
    },
    "/api/v1/admin/settings": {
      "get": {
        "summary": "Get platform settings",
        "tags": [
          "Admin Settings"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Settings retrieved successfully"
          }
        }
      },
      "patch": {
        "summary": "Update platform settings",
        "tags": [
          "Admin Settings"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "platformName": {
                    "type": "string"
                  },
                  "supportEmail": {
                    "type": "string",
                    "format": "email"
                  },
                  "requireEmailVerification": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Settings updated successfully"
          }
        }
      }
    },
    "/api/v1/admin/settings/system-status": {
      "get": {
        "summary": "Get system health status",
        "tags": [
          "Admin Settings"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "System status retrieved successfully"
          }
        }
      }
    },
    "/api/v1/admin/users/{id}": {
      "get": {
        "summary": "Get user details",
        "tags": [
          "Admin Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User details retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "patch": {
        "summary": "Update user status",
        "tags": [
          "Admin Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": [
                      "suspend",
                      "unsuspend",
                      "delete"
                    ]
                  },
                  "reason": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/v1/admin/users/bulk": {
      "post": {
        "summary": "Perform bulk actions on users",
        "tags": [
          "Admin Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": [
                      "suspend",
                      "unsuspend",
                      "delete"
                    ]
                  },
                  "userIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 1,
                    "maxItems": 100
                  },
                  "reason": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Bulk action completed"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "422": {
            "description": "Invalid request data"
          }
        }
      }
    },
    "/api/v1/admin/users": {
      "get": {
        "summary": "Get users list",
        "tags": [
          "Admin Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "userType",
            "schema": {
              "type": "string",
              "enum": [
                "professional",
                "hr_partner",
                "admin"
              ]
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "suspended",
                "pending",
                "deleted"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users list retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Insufficient permissions"
          }
        }
      }
    },
    "/api/v1/client/customer-device-map": {
      "post": {
        "summary": "Create customer-device mapping",
        "tags": [
          "Client"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "deviceId": {
                    "type": "string"
                  },
                  "deviceName": {
                    "type": "string"
                  },
                  "customerId": {
                    "type": "string"
                  },
                  "customerName": {
                    "type": "string"
                  },
                  "primaryNumber": {
                    "type": "string"
                  },
                  "otherNumbers": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Mapping created successfully"
          }
        }
      },
      "get": {
        "summary": "Get customer-device mappings",
        "tags": [
          "Client"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Mappings retrieved successfully"
          }
        }
      },
      "delete": {
        "summary": "Delete customer-device mapping",
        "tags": [
          "Client"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Mapping deleted successfully"
          }
        }
      }
    },
    "/api/v1/docs": {
      "get": {
        "summary": "Get OpenAPI specification",
        "tags": [
          "Documentation"
        ],
        "responses": {
          "200": {
            "description": "OpenAPI specification",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/hr-partners/create": {
      "post": {
        "summary": "Create HR partner profile",
        "tags": [
          "HR Partners"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HrPartnerCreateData"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "HR partner profile created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccess"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "409": {
            "description": "Profile already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/hr-partners/introductions": {
      "get": {
        "summary": "Get introductions sent by HR partner",
        "tags": [
          "HR Partners",
          "Introductions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Introductions retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "HR Partner profile not found"
          }
        }
      }
    },
    "/api/v1/hr-partners/job-roles/{id}": {
      "patch": {
        "summary": "Update a job role",
        "tags": [
          "HR Partners",
          "Job Roles"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isActive": {
                    "type": "boolean"
                  },
                  "isConfidential": {
                    "type": "boolean"
                  },
                  "isUrgent": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "draft",
                      "active",
                      "paused",
                      "filled",
                      "closed"
                    ]
                  },
                  "applicationDeadline": {
                    "type": "string"
                  },
                  "expectedStartDate": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Job role updated successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - not authorized to update this job role"
          },
          "404": {
            "description": "Job role not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a job role",
        "tags": [
          "HR Partners",
          "Job Roles"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job role deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - not authorized to delete this job role"
          },
          "404": {
            "description": "Job role not found"
          }
        }
      }
    },
    "/api/v1/hr-partners/job-roles": {
      "post": {
        "summary": "Create a new job role",
        "tags": [
          "HR Partners",
          "Job Roles"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "department": {
                    "type": "string"
                  },
                  "seniorityLevel": {
                    "type": "string",
                    "enum": [
                      "director",
                      "vp",
                      "c_suite",
                      "executive"
                    ]
                  },
                  "industry": {
                    "type": "string"
                  },
                  "locationCity": {
                    "type": "string"
                  },
                  "locationState": {
                    "type": "string"
                  },
                  "remoteOption": {
                    "type": "string",
                    "enum": [
                      "on_site",
                      "hybrid",
                      "remote"
                    ]
                  },
                  "employmentType": {
                    "type": "string",
                    "enum": [
                      "full_time",
                      "contract",
                      "consulting"
                    ]
                  },
                  "salaryRangeMin": {
                    "type": "number"
                  },
                  "salaryRangeMax": {
                    "type": "number"
                  },
                  "description": {
                    "type": "string"
                  },
                  "requirements": {
                    "type": "string"
                  },
                  "isConfidential": {
                    "type": "boolean"
                  },
                  "isActive": {
                    "type": "boolean"
                  },
                  "isUrgent": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Job role created successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "HR Partner profile not found"
          }
        }
      },
      "get": {
        "summary": "Get job roles for HR partner's company",
        "tags": [
          "HR Partners",
          "Job Roles"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Job roles retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "HR Partner profile not found"
          }
        }
      }
    },
    "/api/v1/hr-partners/me": {
      "get": {
        "summary": "Get current HR partner profile",
        "tags": [
          "HR Partners"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "HR partner profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccess"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "HR partner profile not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/introductions/request": {
      "post": {
        "summary": "Send introduction request to professional",
        "tags": [
          "Introductions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntroductionRequestData"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Introduction request sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Professional not open to opportunities or request already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Professional or HR partner not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/introductions/respond": {
      "post": {
        "summary": "Accept or decline an introduction request",
        "tags": [
          "Introductions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "introductionId": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "accept",
                      "decline"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Introduction response recorded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or introduction not actionable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Failed to process introduction response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phone/send-code": {
      "post": {
        "summary": "Send verification code to phone number",
        "tags": [
          "Phone"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone": {
                    "type": "string",
                    "description": "Nigerian phone number in format +234XXXXXXXXXX"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Verification code sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "expiresIn": {
                      "type": "integer",
                      "description": "Code expiration time in seconds"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid phone number"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Failed to send verification code"
          }
        }
      }
    },
    "/api/v1/phone/verify-code": {
      "post": {
        "summary": "Verify phone number with code",
        "tags": [
          "Phone"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone": {
                    "type": "string",
                    "description": "Phone number to verify"
                  },
                  "code": {
                    "type": "string",
                    "description": "Verification code"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Phone number verified successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "verified": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid or expired code"
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Maximum attempts exceeded"
          },
          "500": {
            "description": "Failed to verify code"
          }
        }
      }
    },
    "/api/v1/professionals/browse": {
      "get": {
        "summary": "Browse professionals with filters and pagination",
        "tags": [
          "Professionals"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "Search term for profile"
          },
          {
            "in": "query",
            "name": "location",
            "schema": {
              "type": "string"
            },
            "description": "Location filter"
          },
          {
            "in": "query",
            "name": "industry",
            "schema": {
              "type": "string"
            },
            "description": "Industry filter"
          },
          {
            "in": "query",
            "name": "minExperience",
            "schema": {
              "type": "integer"
            },
            "description": "Minimum years of experience"
          },
          {
            "in": "query",
            "name": "maxSalary",
            "schema": {
              "type": "integer"
            },
            "description": "Maximum salary expectation"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10,
              "maximum": 100
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "enum": [
                "relevance",
                "experience",
                "recent"
              ],
              "default": "relevance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Professionals retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccess"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/professionals/create": {
      "post": {
        "summary": "Create professional profile",
        "tags": [
          "Professionals"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfessionalCreateData"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Professional profile created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccess"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "409": {
            "description": "Profile already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/professionals/introductions": {
      "get": {
        "summary": "Get professional's introduction requests",
        "tags": [
          "Professionals"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Introduction requests retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccess"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/professionals/me": {
      "get": {
        "summary": "Get current professional profile",
        "tags": [
          "Professionals"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Professional profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccess"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Professional profile not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update current professional profile",
        "tags": [
          "Professionals"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfessionalUpdateData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Professional profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccess"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/professionals/skills": {
      "get": {
        "summary": "Get professional's skills",
        "tags": [
          "Professionals"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Skills retrieved successfully"
          }
        }
      },
      "post": {
        "summary": "Add a new skill",
        "tags": [
          "Professionals"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "level": {
                    "type": "string",
                    "enum": [
                      "Beginner",
                      "Intermediate",
                      "Advanced",
                      "Expert"
                    ]
                  },
                  "isPrimarySkill": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Skill added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Duplicate or invalid skill",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Failed to add skill",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/upload": {
      "post": {
        "summary": "Upload a file",
        "tags": [
          "Upload"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "File to upload"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "resume",
                      "portfolio",
                      "certificate",
                      "cover_letter",
                      "other"
                    ],
                    "description": "Type of file being uploaded"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "Public URL of the uploaded file"
                        },
                        "key": {
                          "type": "string",
                          "description": "S3 key of the uploaded file"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid file or missing parameters"
          },
          "401": {
            "description": "Unauthorized"
          },
          "413": {
            "description": "File too large"
          },
          "422": {
            "description": "Validation failed"
          },
          "500": {
            "description": "Upload failed"
          }
        }
      }
    },
    "/api/v1/webhooks/clerk": {
      "post": {
        "summary": "Handle Clerk webhook events",
        "tags": [
          "Webhooks"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Clerk webhook payload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook processed successfully"
          },
          "400": {
            "description": "Invalid webhook signature or missing headers"
          },
          "500": {
            "description": "Webhook processing failed or configuration error"
          }
        }
      }
    }
  },
  "tags": []
}